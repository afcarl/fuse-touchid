<Package>
	<Extensions Backend="CPlusPlus" Condition="iOS">
		<Type Name="iOSFingerPrint">
			<Require Xcode.Framework="LocalAuthentication" />
			<Require Source.Import="LocalAuthentication/LocalAuthentication.h" />
			<Require Source.Include="uObjC.Reference.h" />
			<Set FileExtension="mm" />
			<Method Signature="iOSAuth(string)">
			    <Body>
			        <![CDATA[
			        Uno_StrongReference *objcCallback = [[Uno_StrongReference alloc] initWithUnoObject:$$];

			        LAContext *myContext = [[LAContext alloc] init];
			        NSError *authError = nil;
			        NSString *myLocalizedReasonString = uObjC::NativeString($0);
			        if ([myContext canEvaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics error:&authError]) {
				        [myContext evaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics
				        localizedReason:myLocalizedReasonString
				        reply:^(BOOL success, NSError *error) {
				        	 // Need a pool, since we are running on a different thread
				        	uAutoReleasePool pool;
				        	@{iOSFingerPrint} myThis = (@{iOSFingerPrint}) [objcCallback unoObject];
				        	myThis->AuthDone(success, nil);
				        }];
			        } else {
				        // Could not evaluate policy; look at authError and present an appropriate message to user
			        	NSLog(@"Could not evaluate policy");
			        	NSLog(@"%@",[authError localizedDescription]);
			        	// Should pass string
			        	$$->AuthDone(false, nil);
			        }
			        ]]>
			    </Body>
			</Method>
		</Type>
	</Extensions>
</Package>